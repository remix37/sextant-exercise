// Colors
$white-color: #fff;
$black-color : #000;
$rr-color: #057fc0;

// Margins
.m-a {margin: auto;}
.marge-delete{overflow: hidden;}

$loop-list1: m p;
$loop-list1-keys: margin padding;
$loop-list2: t b l r;
$loop-list2-keys: top bottom left right;
$loop-length: 20;
$loop-step: 5;
@each $key1 in $loop-list1 {
	@each $key2 in $loop-list2 {
		@for $i from 0 through $loop-length {
			.#{$key1}#{$key2}-#{$i*$loop-step} {
				#{nth($loop-list1-keys,index($loop-list1, $key1))}-#{nth($loop-list2-keys,index($loop-list2, $key2))}: ($loop-step * $i * 1px) !important
			}
		}
	}
}

// box-shadow
@mixin box-shadow($params) {
  -webkit-box-shadow: $params;
     -moz-box-shadow: $params;
          box-shadow: $params;
}

// transform
@mixin transform($transforms) {
	   -moz-transform: $transforms;
	     -o-transform: $transforms;
	    -ms-transform: $transforms;
	-webkit-transform: $transforms;
          transform: $transforms;
}

@media screen and (min-width: $screen-md-min) {
	.row-eq-height {
	  display: -webkit-box;
	  display: -webkit-flex;
	  display: -ms-flexbox;
	  display: flex;
	}
}

/// Mixin printing a linear-gradient
/// as well as a plain color fallback
/// and the `-webkit-` prefixed declaration
/// @access public
/// @param {Keyword | Angle} $direction - Linear gradient direction
/// @param {Arglist} $color-stops - List of color-stops composing the gradient

@mixin linear-gradient($direction, $color-stops...) {
  background: nth(nth($color-stops, 1), 1);
  background: -webkit-linear-gradient(legacy-direction($direction), $color-stops);
  background: linear-gradient($direction, $color-stops);
}

/* @include transition(all,2s,ease-out); */
@mixin transition($what: all, $time: 0.3s, $how: ease-in-out) {
    -webkit-transition: $what $time $how;
    -moz-transition:    $what $time $how;
    -ms-transition:     $what $time $how;
    -o-transition:      $what $time $how;
    transition:         $what $time $how;
}
